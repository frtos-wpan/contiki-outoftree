ifndef CONTIKI
  $(error CONTIKI not defined! You must specify where CONTIKI resides!)
endif

ifndef CONTIKI_TARGET_CPU
  $(error CONTIKI_TARGET_CPU not defined)
endif

#
# The following FREERTOS_* variables have to be provided by the FreeRTOS build
# that in turn kicks off the Contiki build:
#
# FREERTOS 		The FreeRTOS top-level directory.
#			E.g., $(shell pwd)/../freertos
#
# FREERTOS_TARGET	Directory of the user's target-specific build.
#			E.g., $(FREERTOS)/FreeRTOS/Demo/E407
#
# FREERTOS_PORTABLE	Directory of FreeRTOS code specific to the target
#			architecture, CPU, and toolchain.
#			E.g., $(FREERTOS)/FreeRTOS/Source/portable/GCC/ARM_CM4F
#

ifndef FREERTOS
  $(error FREERTOS not defined)
endif

ifndef FREERTOS_TARGET
  $(error FREERTOS_TARGET not defined)
endif

ifndef FREERTOS_PORTABLE
  $(error FREERTOS_PORTABLE not defined)
endif

ifeq ($(UIP_CONF_IPV6),1)
CFLAGS += -DWITH_UIP6=1 -DUIP_CONF_IPV6=1
endif

CONTIKI_TARGET_DIRS = . dev
CONTIKI_TARGET_MAIN = contiki-main.c

CONTIKI_TARGET_SOURCEFILES += $(CONTIKI_EXTRA_SOURCEFILES)
CONTIKI_TARGET_SOURCEFILES += contiki-main.c clock.c irq.c leds.c

ifeq ($(USE_SHELL_WPAN),1)
CONTIKI_TARGET_SOURCEFILES += shell-wpan.c
endif

.SUFFIXES:

#####  STM32F407  #############################################################

# Seems to be application-specific, but let's have it here anyway
CFLAGS += -DAUTOSTART_ENABLE

include platform/$(TARGET)/cpu/$(CONTIKI_TARGET_CPU).mk

# ----- Items picked from Makefile.stm32-ocm3 ---------------------------------

### CPU-dependent cleanup files
CLEAN += symbols.c symbols.h *.d *.elf

### Define the source files we have in this port

CONTIKI_SOURCEFILES        += $(CONTIKI_TARGET_SOURCEFILES)

### Compiler definitions
CC       = $(PREFIX)gcc
AS       = $(PREFIX)as
AR       = $(PREFIX)ar
NM       = $(PREFIX)nm

PROJECTDIRS += $(CONTIKI_EXTRA_PROJECTDIRS)
PROJECT_OBJECTFILES += ${addprefix $(OBJECTDIR)/,$(CONTIKI_TARGET_MAIN:.c=.o)}

CFLAGSNO = -I. -I$(CONTIKI)/core -I$(CONTIKI_CPU) \
           -I$(CONTIKI)/platform/$(TARGET) \
           ${addprefix -I,$(APPDIRS)} \
           -DSUBTARGET=$(SUBTARGET) \
           -Wall $(ARCH_FLAGS) -ggdb3 -MD

CFLAGS += $(CONTIKI_CFLAGS) $(CFLAGSNO) -Os
CFLAGS += -Wno-strict-aliasing -fno-strict-aliasing

LDFLAGS = $(error FreeRTOS build is not meant not produce executables)

### Setup directory search path for source files

CUSTOM_RULE_S_TO_OBJECTDIR_O = yes
%.o: %.S
	$(CC) $(CFLAGS) $< -c

$(OBJECTDIR)/%.o: %.S
	$(CC) $(CFLAGS) $< -c  -o $@


.PHONY: symbols.c
ifdef CORE
symbols.c: $(CORE)
	$(NM) $< | awk -f $(CONTIKI_CPU)/builtins.awk -f ../../tools/mknmlist > symbols.c

endif

empty-symbols.c:
	cp ${CONTIKI}/tools/empty-symbols.c symbols.c
	cp ${CONTIKI}/tools/empty-symbols.h symbols.h

clean: clean_cpu

clean_cpu:
	-rm -rf $(BUILTSRCDIR)

# ----- Network settings ------------------------------------------------------

CFLAGS += -DRF_CHANNEL=$(RF_CHANNEL)
CFLAGS += -DPAN_ADDR=$(PAN_ADDR)
CFLAGS += -DSHORT_ADDR=$(SHORT_ADDR)
CFLAGS += -DRPL_CONF_OF="$(RPL_CONF_OF)"
CONTIKI_SOURCEFILES += $(shell echo $(RPL_CONF_OF).c | tr _ -)

# ----- Special stuff for rf230bb ---------------------------------------------

MKHALH = platform/freertos/mkhalh
MKRF230BB = platform/freertos/mkrf230bb

hal.h:		$(CONTIKI)/cpu/avr/radio/rf230bb/hal.h $(MKHALH)
		$(MKHALH) $< >$@ || { rm -f $@; exit 1; }

rf230bb.c:	hal.h

platform/freertos/./contiki-main.c: hal.h

rf230bb.c:	$(CONTIKI)/cpu/avr/radio/rf230bb/rf230bb.c $(MKRF230BB)
		$(MKRF230BB) $< >$@ || { rm -f $@; exit 1; }

CLEAN += hal.h rf230bb.c

# -----------------------------------------------------------------------------

### Define the CPU directory
CONTIKI_CPU=./cpu/freertos
include $(CONTIKI_CPU)/Makefile.freertos

CFLAGS += -I$(FREERTOS)/FreeRTOS/Source/include \
	  -Iplatform/freertos/wrapper \
	  -I$(FREERTOS_TARGET) \
	  -I$(FREERTOS_PORTABLE)
